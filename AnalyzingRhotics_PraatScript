writeInfoLine: "You better werk!..."

# This script assumes that tier 1 is the word tier and tier 2 is the phoneme tier.

# Extract the names of the Praat objects
thisSound$ = selected$("Sound")
thisTextGrid$ = selected$("TextGrid")

# Extract the number of intervals in the phoneme tier
select TextGrid 'thisTextGrid$'
numberOfPhonemes = Get number of intervals: 2 
appendInfoLine: "There are ", numberOfPhonemes, " intervals."

# Create the Formant Object; 5000 for men and 5500 for women
select Sound 'thisSound$'
To Formant (burg)... 0 5 5000 0.025 50

# Create the output file and write the first line.
outputPath$ = "/Users/michaelsciacca/Desktop/formants.csv"
writeFileLine: "'outputPath$'", "file,word,phoneme,precedingSeg,precedingSegDuration,followingSeg,time,duration,F1,F2,F3,F4,F3-F2_distance,cog,stdev,skewness,kurtosis"

# Loop through each interval on the phoneme tier. -1 was included to indicate the preceding segment.
for thisInterval from 1 to numberOfPhonemes -1
    #appendInfoLine: thisInterval

    # Get the label of the interval
    select TextGrid 'thisTextGrid$'
    thisPhoneme$ = Get label of interval: 2, thisInterval
    #appendInfoLine: thisPhoneme$

 	# Find out if the phoneme is a rhotic allophone; if so, proceed
		if index_regex(thisPhoneme$, "(r|ɾ|0)")
      
	# Get the phoneme of the preceding and following segments 
		beforePhoneme$ = Get label of interval: 2, thisInterval -1
		nextPhoneme$ = Get label of interval: 2, thisInterval + 1

    # Find the midpoint.
    	thisPhonemeStartTime = Get start point: 2, thisInterval
    	thisPhonemeEndTime   = Get end point:   2, thisInterval
    	duration = thisPhonemeEndTime - thisPhonemeStartTime
    	midpoint = thisPhonemeStartTime + duration/2
		start_span = thisPhonemeStartTime + (duration/4)
		end_span = thisPhonemeEndTime - (duration/4)    

	# Find the previous phoneme's duration
		beforePhonemeStartTime = Get start point: 2, thisInterval -1
		beforePhonemeEndTime = Get end point: 2, thisInterval -1
		beforePhonemeDuration = beforePhonemeEndTime - beforePhonemeStartTime


    # Get the word interval and then the label
    	thisWordInterval = Get interval at time: 1, midpoint
    	thisWord$ = Get label of interval: 1, thisWordInterval
      
    # Extract formant measurements
    select Formant 'thisSound$'
   		f1 = Get value at time... 1 midpoint Hertz Linear
    	f2 = Get value at time... 2 midpoint Hertz Linear
    	f3 = Get value at time... 3 midpoint Hertz Linear
    	f4 = Get value at time... 4 midpoint Hertz Linear
    	f2f3distance = f3 - f2


#Extract that middle section
    select Sound 'thisSound$'
    Extract part: start_span, end_span, "Hamming", 1, "no"

# Apply high and low pass filters
    Filter (pass Hann band)... 750 11000 100

# Find the spectrum for that filtered sound	
    To Spectrum... Fast

	  # Get the center of gravity
   	 		cog = Get centre of gravity... 2
			stdev = Get standard deviation... 2
			skewness = Get skewness... 2
			kurtosis = Get kurtosis... 2

	 # Remove the sound parts and spectrum pieces you've just created
		select Sound 'thisSound$'_part
		Remove
	    select Sound 'thisSound$'_part_band
		Remove
		select Spectrum 'thisSound$'_part_band
		Remove
		
	#Get the label of the word
		select TextGrid 'thisTextGrid$'
		thisWordInterval = Get interval at time: 1, end_span
		thisWord$ = Get label of interval: 1, thisWordInterval


    # Save to a spreadsheet
    appendFileLine: "'outputPath$'", 
					...thisSound$, ",",
					...thisWord$, ",",
					...thisPhoneme$, ",",
					...beforePhoneme$, ",",
					...beforePhonemeDuration, ",",
					...nextPhoneme$, ",",
					...midpoint, ",",
					...duration, ",",
					...f1, ",", 
					...f2, ",", 
					...f3, ",",
					...f4, ",",
					...f2f3distance, ",",
					...cog, ",",
					...stdev, ",",
					...skewness, ",",
					...kurtosis

endif
endfor

appendInfoLine: newline$, newline$, "It werked AND it slayed!"
